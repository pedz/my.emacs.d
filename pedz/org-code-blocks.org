#+PROPERTY: header-args:emacs-lisp :comments link :tangle yes

* Swapping Tilde and Backtick in Org and More

This was stolen from [[https://github.com/jeremyf/dotemacs/blob/main/emacs.d/knowledge-management-config.org#swapping-tilde-and-backtick-in-org-and-more][Jeremy Friesen]] who stole it from [[http://mbork.pl/2022-01-17_Making_code_snippets_in_Org-mode_easier_to_type][Marcin
Borkowski: 2022-01-17 Making code snippets in Org-mode easier to
type]].

Markdown uses three back quotes (~```~) to surround code blocks while
Org mode uses tilde =~= to surround inline code.  The code below swaps
tilde and back tick, creates a type of snippet where three back ticks
creates a code block AND allows the type of code block to be specified
by a file local lisp variable.

#+begin_src emacs-lisp
  (define-key org-mode-map (kbd "~") #'org-insert-backtick)
  (defun org-insert-backtick ()
    "Insert a backtick using `org-self-insert-command'."
    (interactive)
    (setq last-command-event ?`)
    (call-interactively #'org-self-insert-command))

  (defvar-local org-insert-tilde-language "emacs-lisp"
    "Default language name in the current Org file.
  If nil, `org-insert-tilde' after 2 tildes inserts an \"example\"
  block.  If a string, it inserts a \"src\" block with the given
  language name.")

  (define-key org-mode-map (kbd "`") #'org-insert-tilde)
  (defun org-insert-tilde ()
    "Insert a tilde using `org-self-insert-command'."
    (interactive)
    (if (string= (buffer-substring-no-properties (- (point) 3) (point))
                 "\n~~")
        (progn (delete-char -2)
               (if org-insert-tilde-language
                   (insert (format "#+begin_src %s\n#+end_src"
                                   org-insert-tilde-language))
                 (insert "#+begin_example\n#+end_example"))
               (forward-line -1)
               (if (string= org-insert-tilde-language "")
                   (move-end-of-line nil)
                 (org-edit-special)))
      (setq last-command-event ?~)
      (call-interactively #'org-self-insert-command)))

  (provide 'org-code-blocks)
#+end_src
